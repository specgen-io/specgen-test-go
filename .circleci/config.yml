version: 2.1

parameters:
  specgen-version:
    type: string
    default: 1.10.66
  tests-version:
    type: string
    default: 1.0.16

jobs:
  service-go:
    docker:
      - image: cimg/go:1.15.6
    working_directory: ~/test-service-go
    steps:
      - checkout
      - run:
          name: Build
          command: ./build.sh

      - run:
          name: Start service-go
          command: ./dist/linux_amd64/service-go --port 8081
          background: true
      - wait-url:
          url: http://localhost:8081/

      - service-tests:
          tests-version: << pipeline.parameters.tests-version >>

      - run:
          name: Release
          command: |
            if [[ $CIRCLE_BRANCH == main ]] || [[ $CIRCLE_BRANCH == v* ]]; then
              ./release.sh << pipeline.parameters.specgen-version >> ${GITHUB_TOKEN}
            else
              echo "Will not release - not running on main branch"
            fi

commands:
  service-tests:
    parameters:
      tests-version:
        type: string
    steps:
      - run:
          name: Install service-tests
          command: |
            curl -L https://github.com/specgen-io/service-tests/releases/download/<< parameters.tests-version >>/service-tests_linux_amd64.zip > service-tests.zip
            unzip -o service-tests.zip
      - go-tests:
          command: ./service-tests -test.v
  go-tests:
    parameters:
      command:
        type: string
        default: go test
    steps:
      - run:
          name: Install go-junit-report
          command: |
            curl -L https://github.com/vsapronov/go-junit-report/releases/download/latest/go-junit-report_linux_amd64.zip > go-junit-report.zip
            unzip -o go-junit-report.zip
      - run:
          name: Run tests
          command: |
            mkdir -p ./test-results
            << parameters.command >> 2>&1 | ./go-junit-report > ./test-results/go-test-report.xml
      - store_test_results:
          path: ./test-results
  wait-url:
    parameters:
      url:
        type: string
      sleep:
        type: integer
        default: 5
      attempts:
        type: integer
        default: 12
    steps:
      - run:
          name: Wait until url is available
          command: |
            attempt_counter=0
            max_attempts=<< parameters.attempts >>

            until $(curl --output /dev/null --silent --head --fail << parameters.url >>); do
              if [ ${attempt_counter} -eq ${max_attempts} ];then
                echo "Max attempts reached"
                exit 1
              fi

              printf '.'
              attempt_counter=$(($attempt_counter+1))
              sleep << parameters.sleep >>
            done

workflows:
  service-go:
    jobs:
      - service-go:
          context: specgen
